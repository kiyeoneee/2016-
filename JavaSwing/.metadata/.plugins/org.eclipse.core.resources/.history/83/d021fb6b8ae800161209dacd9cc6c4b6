package XmlData;

import java.io.*;
import java.util.*;

import java.awt.*;
import java.awt.event.*;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.*;
import org.w3c.dom.traversal.DocumentTraversal;
import org.w3c.dom.traversal.NodeFilter;
import org.w3c.dom.traversal.TreeWalker;

public class XmlMain extends JFrame {
	private JPanel contentPane;
	private JList categoryList1, categoryList2, categoryList3, categoryList4;
	private DefaultListModel jModel1 = new DefaultListModel(), jModel2 = new DefaultListModel(),
			jModel3 = new DefaultListModel(), jModel4 = new DefaultListModel();
	private JFrame jFrame = new JFrame();
	
	private HashMap categoryData = new HashMap();
	
	private MouseListener mouseListen = new MouseAdapter(){
		public void mouseClicked(MouseEvent e) {
			//System.out.println("ddddddd");
			JList theList = (JList) e.getSource();
			if (e.getClickCount() == 2) {
				int index = theList.locationToIndex(e.getPoint());
				if (index >= 0) {
					String s = theList.getModel().getElementAt(index).toString();
					//System.out.println("Double-clicked on: " + o.toString());
					if(categoryData.containsKey(s)){
						HashMap getData = new HashMap();
						getData = (HashMap) categoryData.get(s);
						
						Iterator iterator = getData.iterator();
						while (iterator.hasNext())
							jModel2.addElement(iterator.next().toString());
						
					}
				}
			}
		}
	};

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		XmlMain x = new XmlMain();
	}
	
	public XmlMain() {
		try {
			setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
			setResizable(false);

			File xmlFile = new File("test.xml");

			DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
			DocumentBuilder builder = factory.newDocumentBuilder();
			Document document = builder.parse(xmlFile);

			document.getDocumentElement().normalize();

			NodeList node = document.getElementsByTagName("name");
			NodeList categoryList = node.item(0).getChildNodes();

			categoryData = getData(categoryList);
			Set key = categoryData.keySet();
			Iterator iterator = key.iterator();
			while (iterator.hasNext())
				jModel1.addElement(iterator.next().toString());

			frameSet();
			this.setVisible(true);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void frameSet() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 512, 532);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		categoryList1 = new JList(jModel1);
		categoryList1.addMouseListener(mouseListen);
		contentPane.add(new JScrollPane(categoryList1)).setBounds(8, 8, 118, 268);

		categoryList2 = new JList(jModel2);
		categoryList2.addMouseListener(mouseListen);
		contentPane.add(new JScrollPane(categoryList2)).setBounds(134, 8, 118, 268);

		categoryList3 = new JList(jModel3);
		categoryList3.addMouseListener(mouseListen);
		contentPane.add(new JScrollPane(categoryList3)).setBounds(260, 8, 118, 268);

		categoryList4 = new JList(jModel4);
		categoryList4.addMouseListener(mouseListen);
		contentPane.add(new JScrollPane(categoryList4)).setBounds(386, 8, 118, 268);

		JButton addButton1 = new JButton("+");
		addButton1.setBounds(8, 277, 118, 29);
		contentPane.add(addButton1);

		JButton addButton2 = new JButton("+");
		addButton2.setBounds(134, 277, 118, 29);
		contentPane.add(addButton2);

		JButton addButton3 = new JButton("+");
		addButton3.setBounds(260, 277, 118, 29);
		contentPane.add(addButton3);

		JButton addButton4 = new JButton("+");
		addButton4.setBounds(386, 277, 118, 29);
		contentPane.add(addButton4);

		JList itemList = new JList();
		itemList.setBounds(8, 307, 496, 128);
		contentPane.add(itemList);

		JTextPane textPane = new JTextPane();
		textPane.setBounds(8, 444, 380, 30);
		contentPane.add(textPane);

		JComboBox itemCategory = new JComboBox();
		itemCategory.setBounds(4, 472, 417, 43);
		contentPane.add(itemCategory);

		JButton btnNewButton = new JButton("저장");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnNewButton.setBounds(416, 479, 96, 29);
		contentPane.add(btnNewButton);

		JComboBox coreWord = new JComboBox();
		coreWord.setBounds(390, 446, 120, 27);
		contentPane.add(coreWord);
	}

	public String changeTag(Node n) {
		String s = n.getNodeName();
		s = s.replace("t1", "+");
		s = s.replace("t2", "&");
		s = s.replace("t3", "~");
		s = s.replace("t4", "(");
		s = s.replace("t5", ")");
		s = s.replace("t6", ",");
		s = s.replace("t7", "/");
		s = s.replace("t8", " ");
		s = s.replace("t9", "");

		return s;
	}

	public HashMap getData(NodeList categoryList) {
		if (categoryList.getLength() == 1 && categoryList.item(0).getNodeName() == "#text")
			return null;

		HashMap al = new HashMap();

		for (int i = 0; i < categoryList.getLength(); i++) {
			if (categoryList.item(i) instanceof Element == false)
				continue;

			String strOld = categoryList.item(i).getNodeName();
			String strNew = changeTag(categoryList.item(i));
			String str = categoryList.item(i).getNodeName().replace(strOld, strNew);

			al.put(str, getData(categoryList.item(i).getChildNodes()));
		}
		return al;
	}

}
