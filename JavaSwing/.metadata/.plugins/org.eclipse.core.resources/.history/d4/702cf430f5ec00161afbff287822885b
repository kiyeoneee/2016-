package CategoryClassification;

import java.awt.EventQueue;
import java.util.*;

import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.DefaultTableModel;

import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.ActionEvent;
import java.awt.Color;

public  class ClassificationFrame implements MouseListener {
	JFrame frame;
	private JTable table;
	DefaultTableModel model;
	public String[][][] categoryData;
	public String[][][] categoryName;
	public int[][][] categoryCode;
	
	private DefaultListModel<String[]> jModel1 = new DefaultListModel(), jModel2 = new DefaultListModel(),
			jModel3 = new DefaultListModel();
	
	public ClassificationFrame(String[][][] getData, String[][][] getName, int[][][] getCode) {
		categoryData = getData;
		categoryName = getName;
		categoryCode = getCode;
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setResizable(false);
		frame.setBounds(50, 50, 1150, 700);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		JList list = new JList();
		list.setBounds(6, 6, 280, 666);
		frame.getContentPane().add(list);
		
		JList list_1 = new JList();
		list_1.setBounds(952, 6, 192, 666);
		frame.getContentPane().add(list_1);
		
		JTextPane textPane = new JTextPane();
		textPane.setBounds(292, 6, 654, 55);
		frame.getContentPane().add(textPane);
		
		model = new DefaultTableModel(new Object[] {"핵심단어", "카테고리1", "카테고리2", "카테고리3", "코드"}, 0);
		table = new JTable(model);
		table.createDefaultColumnsFromModel();
		table.setBounds(292, 67, 593, 220);
		frame.getContentPane().add(table);
		
		JButton btnNewButton = new JButton(">>");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnNewButton.setBounds(889, 145, 59, 60);
		frame.getContentPane().add(btnNewButton);
		
		JButton btnNewButton_1 = new JButton("수정");
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnNewButton_1.setBounds(287, 290, 220, 30);
		frame.getContentPane().add(btnNewButton_1);
		
		JButton button = new JButton("추가");
		button.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		button.setBounds(509, 290, 220, 30);
		frame.getContentPane().add(button);
		
		JButton button_1 = new JButton("삭제");
		button_1.setBounds(731, 290, 220, 30);
		frame.getContentPane().add(button_1);
		
		JSeparator partition = new JSeparator();
		partition.setForeground(Color.BLACK);
		partition.setSize(660, 0);
		partition.setLocation(287, 328);
		frame.getContentPane().add(partition);
		
		JTextPane textPane_1 = new JTextPane();
		textPane_1.setBounds(291, 344, 655, 40);
		frame.getContentPane().add(textPane_1);
		
		JList categoryListView1 = new JList();
		jModel1.copyInto(getString4List1(0, 0));
		categoryListView1.addMouseListener(this);
		frame.getContentPane().add(new JScrollPane(categoryListView1)).setBounds(292, 390, 214, 250);
		
		JList categoryListView2 = new JList();
		frame.getContentPane().add(new JScrollPane(categoryListView2)).setBounds(512, 390, 214, 250);
		
		JList categoryListView3 = new JList();
		frame.getContentPane().add(new JScrollPane(categoryListView3)).setBounds(732, 390, 214, 250);
		
		JButton btnNewButton_2 = new JButton("수정정보 저장");
		btnNewButton_2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnNewButton_2.setBounds(287, 643, 335, 30);
		frame.getContentPane().add(btnNewButton_2);
		
		JButton button_2 = new JButton("취소");
			
		JSeparator separator = new JSeparator();
		separator.setBounds(290, 323, 658, 14);
		frame.getContentPane().add(separator);

		button_2.setBounds(616, 643, 335, 30);
		frame.getContentPane().add(button_2);
	}
	
	public String[] getString4List1(int y, int z){
		String[] makeListData = new String[categoryName.length];
		for (int i = 0; i < categoryName.length; i++)
			makeListData[i] = categoryName[i][0][0].toString();
		System.out.println(makeListData);
		return makeListData;
	}
	
	public String[] getString4List2(int x, int z){
		String[] makeListData = new String[categoryName.length];
		for (int i = 0; i < categoryName.length; i++)
			makeListData[i] = categoryName[i][0][0].toString();
		System.out.println(makeListData);
		return makeListData;
	}
	
	public String[] getString4List3(int y, int z){
		String[] makeListData = new String[categoryName.length];
		for (int i = 0; i < categoryName.length; i++)
			makeListData[i] = categoryName[i][0][0].toString();
		System.out.println(makeListData);
		return makeListData;
	}

	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub
		JList theList = (JList) e.getSource();
		if (e.getClickCount() == 1) {
			int index = theList.locationToIndex(e.getPoint());
			System.out.println(index);
			
			
			
/*			int index = theList.locationToIndex(e.getPoint());
			if (index >= 0) {
				HashMap getData = new HashMap();
				String s = theList.getModel().getElementAt(index).toString();
				// System.out.println("Double-clicked on: " + o.toString());
				if (categoryData.containsKey(s)) {
					jModel2.clear();
					jModel3.clear();
					category1Idx = s;
					category1picked = true;
					getData = (HashMap) categoryData.get(s);

					Iterator iterator = getData.keySet().iterator();
					while (iterator.hasNext())
						jModel2.addElement(iterator.next().toString());
					return;
				}
				// check 2nd category
				getData = (HashMap) categoryData.get(category1Idx);
				if (getData.containsKey(s)) {
					jModel3.clear();
					category2Idx = s;
					category2picked = true;
					getData = (HashMap) getData.get(s);

					Iterator iterator = getData.keySet().iterator();
					while (iterator.hasNext())
						jModel3.addElement(iterator.next().toString());
					return;
				}
				// check 3rd category
				getData = (HashMap) getData.get(category2Idx);
				if (getData.containsKey(s)) {
					category3Idx = s;
					category3picked = true;
					getData = (HashMap) getData.get(s);
					if (getData == null) {
						JOptionPane.showMessageDialog(null, "하위 카테고리가 없습니다.");
						return;
					}

					Iterator iterator = getData.keySet().iterator();
				}
			}*/
		}
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
}
